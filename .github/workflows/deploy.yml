name: Deploy

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:
    inputs:
      environment:
        required: true
        description: Deployment environment
        default: development
        type: choice
        options:
          - feature
          - development
          - test
          - acceptance
          - production

env:
  DEFAULT_DEPLOYMENT_ENVIRONMENT: feature
  DOCKER_REGISTRY: ghcr.io

jobs:

  build-images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v2
        with:
          registry: ainewsbot.azurecr.io
          username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}

      - name: Build Summarizer image
        run: |
          docker build -f ./src/summarizer/Dockerfile -t myregistry.azurecr.io/summarizer:latest

      - name: Build Scrapper image
        run: |
          docker build -f ./src/scrapper/Dockerfile -t myregistry.azurecr.io/scrapper:latest

      - name: Build Paperchooser image
        run: |
          docker build -f ./src/paperchooser/Dockerfile -t myregistry.azurecr.io/paperchooser:latest

      - name: Build AiNewsBot image
        run: |
          docker build -f ./src/ainewsbot/Dockerfile -t myregistry.azurecr.io/ainewsbot:latest

      - name: Push Summarizer image
        run: |
          docker push myregistry.azurecr.io/summarizer:latest

      - name: Push Scrapper image
        run: |
          docker push myregistry.azurecr.io/scrapper:latest

      - name: Push Paperchooser image
        run: |
          docker push myregistry.azurecr.io/paperchooser:latest

      - name: Push AiNewsBot image
        run: |
          docker push myregistry.azurecr.io/ainewsbot:latest
  deploy:
    runs-on: ubuntu-latest

    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in to the Docker registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Docker image tag
        run: echo "GIT_TAG=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_REGISTRY }}/${{ github.repository_owner }}/${{ github.repository }}:${{ github.event.inputs.environment || env.DEFAULT_DEPLOYMENT_ENVIRONMENT }}
            ${{ env.DOCKER_REGISTRY }}/${{ github.repository_owner }}/${{ github.repository }}:${{ env.GIT_TAG }}
          target: app
